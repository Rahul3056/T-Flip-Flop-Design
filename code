#### **Example Verilog Code (T Flip-Flop)**  
```verilog
module t_flip_flop (
    input wire T, CLK,
    output reg Q
);
    always @(posedge CLK) begin
        if (T)
            Q <= ~Q; // Toggle
    end
endmodule
```

#### **Testbench Code**  
```verilog
module testbench;
    reg T, CLK;
    wire Q;

    t_flip_flop uut (.T(T), .CLK(CLK), .Q(Q));

    initial begin
        CLK = 0;
        forever #5 CLK = ~CLK; // Generate clock with 10-time unit period
    end

    initial begin
        $monitor("Time=%0t | CLK=%b | T=%b | Q=%b", $time, CLK, T, Q);

        T = 0; #10;
        T = 1; #10;
        T = 1; #10;
        T = 1; #10;
        T = 0; #10;
        T = 1; #10;

        $finish;
    end
endmodule
```

#### **Simulation Output (Console Log Example)**  
```
Time=0 | CLK=0 | T=0 | Q=0  
Time=5 | CLK=1 | T=0 | Q=0  
Time=10 | CLK=0 | T=1 | Q=0  
Time=15 | CLK=1 | T=1 | Q=1  
Time=20 | CLK=0 | T=1 | Q=1  
Time=25 | CLK=1 | T=1 | Q=0  
Time=30 | CLK=0 | T=1 | Q=0  
Time=35 | CLK=1 | T=1 | Q=1  
Time=40 | CLK=0 | T=0 | Q=1  
Time=45 | CLK=1 | T=0 | Q=1  
Time=50 | CLK=0 | T=1 | Q=1  
Time=55 | CLK=1 | T=1 | Q=0  
``` 
